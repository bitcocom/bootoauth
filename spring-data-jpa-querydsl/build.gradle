buildscript{
   ext{
     queryDslVersion="5.0.0"
   }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	// Querydsl START
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'	
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//Querydsl START
def querydslDir = "src/main/generated"

querydsl {
 library = "com.querydsl:querydsl-apt"
 jpa = true
 querydslSourcesDir = querydslDir
}

sourceSets {
 main.java.srcDirs=['src/main/java',querydslDir]    
}

configurations {
 querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
 options.annotationProcessorPath = configurations.querydsl
}
// Querydsl END

tasks.named('test') {
	useJUnitPlatform()
}
